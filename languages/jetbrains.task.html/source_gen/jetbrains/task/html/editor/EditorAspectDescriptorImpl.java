package jetbrains.task.html.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new ATag_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new DivTag_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new H1_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new H2_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new H3_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new HtmlPage_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new ImgTag_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new OList_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new OListItem_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new PTag_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new SpanTag_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new TagGroup_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new Text_Editor());
      case 13:
        return Collections.<ConceptEditor>singletonList(new UList_Editor());
      case 14:
        return Collections.<ConceptEditor>singletonList(new UListItem_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }



  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xe3ef414942a74e42L, 0x8bc2f96cb576bf56L, 0x12fdec7bd2dc30dfL), MetaIdFactory.conceptId(0xe3ef414942a74e42L, 0x8bc2f96cb576bf56L, 0x12fdec7bd2f9b360L), MetaIdFactory.conceptId(0xe3ef414942a74e42L, 0x8bc2f96cb576bf56L, 0x12fdec7bd2e52314L), MetaIdFactory.conceptId(0xe3ef414942a74e42L, 0x8bc2f96cb576bf56L, 0x12fdec7bd2f57bbcL), MetaIdFactory.conceptId(0xe3ef414942a74e42L, 0x8bc2f96cb576bf56L, 0x12fdec7bd2f7ace2L), MetaIdFactory.conceptId(0xe3ef414942a74e42L, 0x8bc2f96cb576bf56L, 0x4318f1c33ebd2396L), MetaIdFactory.conceptId(0xe3ef414942a74e42L, 0x8bc2f96cb576bf56L, 0x12fdec7bd301fcccL), MetaIdFactory.conceptId(0xe3ef414942a74e42L, 0x8bc2f96cb576bf56L, 0x12fdec7bd2e3ebd0L), MetaIdFactory.conceptId(0xe3ef414942a74e42L, 0x8bc2f96cb576bf56L, 0x12fdec7bd2e3ef45L), MetaIdFactory.conceptId(0xe3ef414942a74e42L, 0x8bc2f96cb576bf56L, 0x4318f1c33ebdc9cfL), MetaIdFactory.conceptId(0xe3ef414942a74e42L, 0x8bc2f96cb576bf56L, 0x12fdec7bd2fe5de2L), MetaIdFactory.conceptId(0xe3ef414942a74e42L, 0x8bc2f96cb576bf56L, 0x4318f1c33ebd91bbL), MetaIdFactory.conceptId(0xe3ef414942a74e42L, 0x8bc2f96cb576bf56L, 0x4318f1c33ec17bbdL), MetaIdFactory.conceptId(0xe3ef414942a74e42L, 0x8bc2f96cb576bf56L, 0x12fdec7bd2de83a7L), MetaIdFactory.conceptId(0xe3ef414942a74e42L, 0x8bc2f96cb576bf56L, 0x12fdec7bd2dddcaeL)).seal();
}
